{"version":3,"sources":["components/Cast/Cast.module.css","components/Cast/Cast.jsx"],"names":["module","exports","Cast","movieId","useParams","useState","cast","setCast","useEffect","a","movieApi","toast","error","onFetchCast","className","s","list","map","actor","item","thumb","photo","src","profile_path","alt","name","width","title","text","character","id"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,MAAQ,oBAAoB,KAAO,qB,4KCKlJ,SAASC,IACtB,IAAQC,EAAYC,cAAZD,QACR,EAAwBE,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,+EAEuBC,IAAwBP,GAF/C,OAEUG,EAFV,OAGIC,EAAQD,GAHZ,gDAKIK,IAAMC,MAAM,aALhB,0DADc,uBAAC,WAAD,wBASdC,KACC,CAACV,IAGF,mCACE,oBAAIW,UAAWC,IAAEC,KAAjB,SACGV,EAAKW,KAAI,SAAAC,GAAK,OACb,qBAAmBJ,UAAWC,IAAEI,KAAhC,UACE,qBAAKL,UAAWC,IAAEK,MAAlB,SACE,qBACEN,UAAWC,IAAEM,MACbC,IAAKZ,IAAkBQ,EAAMK,aAC7BC,IAAKN,EAAMO,KACXC,MAAM,WAIV,oBAAIZ,UAAWC,IAAEY,MAAjB,SAAyBT,EAAMO,OAC/B,8BACE,sBAAMX,UAAWC,IAAEa,KAAnB,wBADF,IAC8CV,EAAMW,eAZ7CX,EAAMY","file":"static/js/7.a3d83b31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Cast_list__fda45\",\"item\":\"Cast_item__1la3h\",\"photo\":\"Cast_photo__4o-t6\",\"thumb\":\"Cast_thumb__-v5RJ\",\"title\":\"Cast_title__3B-Pz\",\"text\":\"Cast_text__2Exqc\"};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { toast } from 'react-hot-toast';\r\nimport * as movieApi from 'apiService/apiService';\r\nimport s from './Cast.module.css';\r\n\r\nexport default function Cast() {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function onFetchCast() {\r\n      try {\r\n        const cast = await movieApi.fetchMovieCast(movieId);\r\n        setCast(cast);\r\n      } catch (err) {\r\n        toast.error('Not found');\r\n      }\r\n    }\r\n    onFetchCast();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {cast.map(actor => (\r\n          <li key={actor.id} className={s.item}>\r\n            <div className={s.thumb}>\r\n              <img\r\n                className={s.photo}\r\n                src={movieApi.poster + actor.profile_path}\r\n                alt={actor.name}\r\n                width=\"80px\"\r\n              />\r\n            </div>\r\n\r\n            <h3 className={s.title}>{actor.name}</h3>\r\n            <p>\r\n              <span className={s.text}>Character:</span> {actor.character}\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}